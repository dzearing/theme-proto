import { IColorLayerKey } from "./IColorLayerKey";
import { IRawStyle } from "@uifabric/styling";
import { IColor } from "../coloring/color";


/**
 * Various non-color properties that can be referenced by the theming system
 */
export interface IStyleValues {
  /**
   * Fonts for various sizes
   */
  fonts: IFonts;
  /**
   * Font weights
   */
  fontWeights: IFontWeights;
  /**
   * Border thickness
   */
  borderThickness?: string;
}

/**
 * Definition for a style or state which contains the partial list of colors and
 * partial set of values to override
 */
export interface IStyleDefinition {
  /**
   * Set of colors to override for this style
   */
  colors?: { [key: string]: IColorLayerKey };
  /**
   * Set of values to override
   */
  values?: Partial<IStyleValues>;
}

/**
 * Definition of a style, passed into the styling system
 */
export interface IThemeStyleDefinition extends IStyleDefinition {
  /**
   * parent style to base this definition off of
   */
  parent?: string;
  /**
   * overridable states for the styles.  Each state can have
   * colors or values being overridden
   */
  states?: {
    [key: string]: IStyleDefinition;
  }
}

/**
 * Resolved colors that can be extracted to a style
 */
export interface IStyleColors {
  /**
   * Background color, must be present
   */
  bg: IColor;
  /**
   * Foreground color, must be present
   */
  fg: IColor;
  /**
   * Other colors, generated by rules specified in the style
   */
  [key: string]: IColor;
}

/**
 * Resolved theme style, this has real color values where present rather than just keys.  Items inherited
 * from the parent style have been pushed forward at this point
 */
export interface IThemeStyle {
  colors: IStyleColors;
  values: IStyleValues;
  states: {
    [key: string]: {
      colors?: Partial<IStyleColors>;
      values?: Partial<IStyleValues>;
    }
  }
}

export interface IFonts {
  medium: IRawStyle;
}

export interface IFontWeights {
  emphasized: IRawStyle;
  normal: IRawStyle;
  diminished: IRawStyle;
}